import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
import pickle
from tensorflow.keras.models import load_model

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="7930769291:AAEiCjYWaSMu6xqWGdtgi_JGa0NhlMbi1pU")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

from datetime import datetime
dp["started_at"] = datetime.now().strftime("%Y-%m-%d %H:%M")

@dp.message(Command("info"))
async def cmd_info(message: types.Message, started_at: str):
    await message.answer(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω {started_at}")

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏ –º–Ω–µ URL –∏ —è –ø—Ä–æ–≤–µ—Ä—é –µ—ë –Ω–∞ –≤—Ä–µ–¥–æ–Ω–æ—Å—Ç—å")

@dp.message(Command("dice"))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")

#–ó–∞–≥—Ä—É–∂–∞–µ–º –≥–æ—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
#model = load_model('url_classifier_LSTM.joblib')
#with open('tokenizer.pkl', 'rb') as f:
#    TOKENIZER = pickle.load(f)
#with open('label_encoder.pkl', 'rb') as f:
#      LE = pickle.load(f)

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

# –∏–º–ø–æ—Ä—Ç—ã
from config_reader import config

# –î–ª—è –∑–∞–ø–∏—Å–µ–π —Å —Ç–∏–ø–æ–º Secret* –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
# –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥ get_secret_value(),
# —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–º–µ—Å—Ç–æ '*******'
bot = Bot(token=config.bot_token.get_secret_value())

from aiogram.filters import Command

